# Даны значения величины заработной платы заемщиков банка (zp) и значения их
# поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек numpy и pandas

import numpy as np
import scipy.stats as stats

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

cov1 = np.cov(zp, ks, ddof=0)
print(f'Смещенная ковариация с помощью функции = {cov1}')

cov2 = np.cov(zp, ks, ddof=1)
print(f'Несмещенная ковариация с помощью функции = {cov2}')

cov3 = np.mean(zp * ks) - np.mean(zp) * np.mean(ks)
print(f'Ковариация = {cov3}')

r1 = cov1 / (np.std(zp, ddof=0) * np.std(ks, ddof=0))
r2 = cov2 / (np.std(zp, ddof=1) * np.std(ks, ddof=1))
print(f'Коэффициент корреляции Пирсона = {r1}')
print(f'Коэффициент корреляции Пирсона = {r2}')
print(f'Коэффициент корреляции Пирсона с помощью функции = {np.corrcoef(zp,ks)}')
